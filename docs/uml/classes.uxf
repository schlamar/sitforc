<?xml version="1.0" encoding="UTF-8" standalone="no"?><umlet_diagram><help_text>// Uncomment the following line to change the fontsize:
// fontsize=14


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on UML elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use Â± or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text><zoom_level>10</zoom_level><element><type>com.umlet.element.base.Class</type><coordinates><x>390</x><y>0</y><w>370</w><h>210</h></coordinates><panel_attributes>&lt;&lt;abstract&gt;&gt;
sitforc.fitting.Fitter(object)
--
data: array, array
x: property
y: property
data_cache: dict
--
Fitter(x: array, y: array)
-fill_cache(n: int, obj: object, values: array, repr_str: str)
/-derivate(n: int)/
+repr_func(n: int=0) : str
+get_values(n: int=0): array</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>860</x><y>10</y><w>310</w><h>130</h></coordinates><panel_attributes>sitforc.fitting.PolyFitter(Fitter)
--
degree: property
--
PolyFitter(x: array, y: array, degree: int)
__str__() : str
-derivate(n: int)
+get_inflec_points(): array, array</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>740</x><y>60</y><w>140</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>19;10;120;10</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>550</x><y>200</y><w>40</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>20;9;20;80</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>10</x><y>490</y><w>280</w><h>170</h></coordinates><panel_attributes>sitforc.core.Model(object)
--
name: str
funcstring: str
func: lambda_function
default_params: dict
--
Model(name: str, funcstring: str, **params)
__call__(x: array, *p, *p_kws): float
__str__(): str
+set_default_params(**params)</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>280</x><y>400</y><w>226</w><h>194</h></coordinates><panel_attributes>lt=-&gt;
m1=   *
m2=     1
 

&lt;uses</panel_attributes><additional_attributes>180;9;180;150;10;150</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>420</x><y>280</y><w>350</w><h>130</h></coordinates><panel_attributes>sitforc.fitting.ModelFitter(Fitter)
--
model: Model
params: dict
--
ModelFitter(x: array, y: array, model: Mode, **params)
__str__() : str
-derivate(n: int)</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>870</x><y>290</y><w>270</w><h>160</h></coordinates><panel_attributes>sitforc.core.ITMIdentifier(Identifier)
--
model_fitter: ModelFitter
poly_fitter: PolyFitter
tangent_slope: float
dead_time: float
split_point: float
--
ITMIdentifier(x: array, y: array)
calculate_split_point(delta: float=0.05)</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>10</x><y>790</y><w>280</w><h>250</h></coordinates><panel_attributes>sitforc.core.ModelLibrary(object)
--
lib: dict()
--
ModelLibrary()
__str__(): str
__call__(name: str'): Model
__getattr__(name: str): Model
__getitem__(name: str): Model
__iter__(): iter
__len__(): len
-load()
+reset()
+save()
+new_model(name, funcstring, **params)

</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>50</x><y>640</y><w>168</w><h>170</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=       1
m2=     *
                  contains&gt;</panel_attributes><additional_attributes>80;150;80;20</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>410</x><y>950</y><w>280</w><h>90</h></coordinates><panel_attributes>&lt;&lt;module&gt;&gt;
sitforc.funcparser
--
parse_rules: class
--
_+parse_func(funcstring): function, str, list_
</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>270</x><y>930</y><w>160</w><h>60</h></coordinates><panel_attributes>lt=-&gt;
m1=  1
m2=     1
 uses&gt;</panel_attributes><additional_attributes>19;40;140;40</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>440</x><y>600</y><w>360</w><h>90</h></coordinates><panel_attributes>sitforc.core.RegressionIdentifier(Identifier)
--
model_fitter: ModelFitter
--
RegressionIdentifier(x: array, y: array, model: Model)</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>0</x><y>230</y><w>310</w><h>90</h></coordinates><panel_attributes>&lt;&lt;module&gt;&gt;
sitforc.numlib
--
--
_+modelfit(f: function, p: dict, x: array, y: array)_
_+smooth(x: array, window_len: int): array_</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>300</x><y>257</y><w>140</w><h>56</h></coordinates><panel_attributes>lt=-&gt;
m1=*
m2=1
&lt;uses</panel_attributes><additional_attributes>120;33;9;33</additional_attributes></element><element><type>com.umlet.element.custom.Artefact</type><coordinates><x>410</x><y>830</y><w>130</w><h>50</h></coordinates><panel_attributes>modellib.sfm</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>270</x><y>830</y><w>160</w><h>40</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>140;20;19;20</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>840</x><y>840</y><w>310</w><h>140</h></coordinates><panel_attributes>&lt;&lt;module&gt;&gt;
sitforc.core
--
modellib: ModelLibrary
--
_+identify_itm(x: array, y: array)_
_+identify_reg(x: array, y: array, model: Model)_
_+shift_data(x: array, y: array, shift: float)_
_+load_csv(filename: string): array, array_
</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>670</x><y>667</y><w>190</w><h>260</h></coordinates><panel_attributes>lt=-&gt;
m1=  1
m2=     *
 
&lt;uses</panel_attributes><additional_attributes>170;223;30;223;30;22</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>910</x><y>120</y><w>168</w><h>190</h></coordinates><panel_attributes>lt=&lt;-
m1=  1
m2=  1
                  contains&gt;</panel_attributes><additional_attributes>80;20;80;170</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>750</x><y>300</y><w>140</w><h>50</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1
&lt;contains</panel_attributes><additional_attributes>19;30;120;30</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>530</x><y>400</y><w>182</w><h>220</h></coordinates><panel_attributes>lt=-&gt;
m1=  1
m2=    1
                   contains&gt;</panel_attributes><additional_attributes>90;200;90;9</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>1040</x><y>435</y><w>144</w><h>420</h></coordinates><panel_attributes>lt=-&gt;
m1=  1
m2=     *
               uses&gt;</panel_attributes><additional_attributes>70;405;70;14</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>870</x><y>540</y><w>200</w><h>120</h></coordinates><panel_attributes>&lt;&lt;abstract&gt;&gt;
sitforc.core.Identifier(object)
--
data: array, array
--
Identifier(x: array, y: array)
/+plot_solution()/
/+print_solution()/</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>950</x><y>440</y><w>40</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>20;100;20;9</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>780</x><y>570</y><w>50</w><h>40</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>90;20;90;20</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>780</x><y>590</y><w>110</w><h>40</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>90;20;19;20</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>0</x><y>350</y><w>310</w><h>90</h></coordinates><panel_attributes>&lt;&lt;module&gt;&gt;
sitforc.symlib
--
--
_+generate_sym_func(funcstring: str, p: dict)_
_+diff_func(sym_func): sym_func_</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>299</x><y>337</y><w>142</w><h>56</h></coordinates><panel_attributes>lt=-&gt;
m1=*
m2=1
&lt;uses</panel_attributes><additional_attributes>121;33;9;33</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>269</x><y>900</y><w>592</w><h>40</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>571;20;19;20</additional_attributes></element></umlet_diagram>